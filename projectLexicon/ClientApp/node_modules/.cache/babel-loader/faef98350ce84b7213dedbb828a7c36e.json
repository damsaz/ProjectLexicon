{"ast":null,"code":"var _jsxFileName = \"/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/components/api-authorization/AuthorizeRoute.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { ApplicationPaths, QueryParameterNames } from './ApiAuthorizationConstants';\nimport authService from './AuthorizeService';\nexport default class AuthorizeRoute extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ready: false,\n      authenticated: false\n    };\n  }\n  componentDidMount() {\n    this._subscription = authService.subscribe(() => this.authenticationChanged());\n    this.populateAuthenticationState();\n  }\n  componentWillUnmount() {\n    authService.unsubscribe(this._subscription);\n  }\n  render() {\n    const {\n      ready,\n      authenticated\n    } = this.state;\n    const redirectUrl = `${ApplicationPaths.Login}?${QueryParameterNames.ReturnUrl}=${encodeURI(window.location.href)}`;\n    if (!ready) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 20\n        }\n      });\n    } else {\n      const {\n        component: Component,\n        ...rest\n      } = this.props;\n      return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n        render: props => {\n          if (authenticated) {\n            return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 32\n              }\n            }));\n          } else {\n            return /*#__PURE__*/React.createElement(Redirect, {\n              to: redirectUrl,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 32\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      }));\n    }\n  }\n  async populateAuthenticationState() {\n    const authenticated = await authService.isAuthenticated();\n    this.setState({\n      ready: true,\n      authenticated\n    });\n  }\n  async authenticationChanged() {\n    this.setState({\n      ready: false,\n      authenticated: false\n    });\n    await this.populateAuthenticationState();\n  }\n}","map":{"version":3,"names":["React","Component","Route","Redirect","ApplicationPaths","QueryParameterNames","authService","AuthorizeRoute","constructor","props","state","ready","authenticated","componentDidMount","_subscription","subscribe","authenticationChanged","populateAuthenticationState","componentWillUnmount","unsubscribe","render","redirectUrl","Login","ReturnUrl","encodeURI","window","location","href","component","rest","isAuthenticated","setState"],"sources":["/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/components/api-authorization/AuthorizeRoute.js"],"sourcesContent":["import React from 'react'\nimport { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { ApplicationPaths, QueryParameterNames } from './ApiAuthorizationConstants'\nimport authService from './AuthorizeService'\n\nexport default class AuthorizeRoute extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ready: false,\n            authenticated: false\n        };\n    }\n\n    componentDidMount() {\n        this._subscription = authService.subscribe(() => this.authenticationChanged());\n        this.populateAuthenticationState();\n    }\n\n    componentWillUnmount() {\n        authService.unsubscribe(this._subscription);\n    }\n\n    render() {\n        const { ready, authenticated } = this.state;\n        const redirectUrl = `${ApplicationPaths.Login}?${QueryParameterNames.ReturnUrl}=${encodeURI(window.location.href)}`\n        if (!ready) {\n            return <div></div>;\n        } else {\n            const { component: Component, ...rest } = this.props;\n            return <Route {...rest}\n                render={(props) => {\n                    if (authenticated) {\n                        return <Component {...props} />\n                    } else {\n                        return <Redirect to={redirectUrl} />\n                    }\n                }} />\n        }\n    }\n\n    async populateAuthenticationState() {\n        const authenticated = await authService.isAuthenticated();\n        this.setState({ ready: true, authenticated });\n    }\n\n    async authenticationChanged() {\n        this.setState({ ready: false, authenticated: false });\n        await this.populateAuthenticationState();\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,6BAA6B;AACnF,OAAOC,WAAW,MAAM,oBAAoB;AAE5C,eAAe,MAAMC,cAAc,SAASN,SAAS,CAAC;EAClDO,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE,KAAK;MACZC,aAAa,EAAE;IACnB,CAAC;EACL;EAEAC,iBAAiB,GAAG;IAChB,IAAI,CAACC,aAAa,GAAGR,WAAW,CAACS,SAAS,CAAC,MAAM,IAAI,CAACC,qBAAqB,EAAE,CAAC;IAC9E,IAAI,CAACC,2BAA2B,EAAE;EACtC;EAEAC,oBAAoB,GAAG;IACnBZ,WAAW,CAACa,WAAW,CAAC,IAAI,CAACL,aAAa,CAAC;EAC/C;EAEAM,MAAM,GAAG;IACL,MAAM;MAAET,KAAK;MAAEC;IAAc,CAAC,GAAG,IAAI,CAACF,KAAK;IAC3C,MAAMW,WAAW,GAAI,GAAEjB,gBAAgB,CAACkB,KAAM,IAAGjB,mBAAmB,CAACkB,SAAU,IAAGC,SAAS,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAE,EAAC;IACnH,IAAI,CAAChB,KAAK,EAAE;MACR,oBAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAW;IACtB,CAAC,MAAM;MACH,MAAM;QAAEiB,SAAS,EAAE3B,SAAS;QAAE,GAAG4B;MAAK,CAAC,GAAG,IAAI,CAACpB,KAAK;MACpD,oBAAO,oBAAC,KAAK,oBAAKoB,IAAI;QAClB,MAAM,EAAGpB,KAAK,IAAK;UACf,IAAIG,aAAa,EAAE;YACf,oBAAO,oBAAC,SAAS,oBAAKH,KAAK;cAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAA,GAAI;UACnC,CAAC,MAAM;YACH,oBAAO,oBAAC,QAAQ;cAAC,EAAE,EAAEY,WAAY;cAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAA,EAAG;UACxC;QACJ,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAG;IACb;EACJ;EAEA,MAAMJ,2BAA2B,GAAG;IAChC,MAAML,aAAa,GAAG,MAAMN,WAAW,CAACwB,eAAe,EAAE;IACzD,IAAI,CAACC,QAAQ,CAAC;MAAEpB,KAAK,EAAE,IAAI;MAAEC;IAAc,CAAC,CAAC;EACjD;EAEA,MAAMI,qBAAqB,GAAG;IAC1B,IAAI,CAACe,QAAQ,CAAC;MAAEpB,KAAK,EAAE,KAAK;MAAEC,aAAa,EAAE;IAAM,CAAC,CAAC;IACrD,MAAM,IAAI,CAACK,2BAA2B,EAAE;EAC5C;AACJ"},"metadata":{},"sourceType":"module"}