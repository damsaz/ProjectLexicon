{"ast":null,"code":"var _jsxFileName = \"/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/components/Chat/ConversationList2.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport ConversationSearch from './ConversationSearch';\nimport ConversationListItem from './ConversationListItem';\nimport Toolbar from './Toolbar';\nimport ToolbarButton from './ToolbarButton';\nimport axios from 'axios';\nimport { apiGet } from './api';\nimport './Style/ConversationList.css';\nimport usersService from '../users/UsersService';\nimport authService from '../api-authorization/AuthorizeService';\nimport Message from './Message';\nimport moment from 'moment';\nimport MessageList from './MessageList';\nconst MY_USER_ID = 'apple';\nexport class ConversationList2 extends Component {\n  constructor(props) {\n    super(props);\n    this.getMessages = () => {\n      var tempMessages = [{\n        id: 1,\n        author: 'apple',\n        message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n        timestamp: new Date().getTime()\n      }, {\n        id: 2,\n        author: 'orange',\n        message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n        timestamp: new Date().getTime()\n      }, {\n        id: 3,\n        author: 'orange',\n        message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n        timestamp: new Date().getTime()\n      }, {\n        id: 4,\n        author: 'apple',\n        message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n        timestamp: new Date().getTime()\n      }, {\n        id: 5,\n        author: 'apple',\n        message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n        timestamp: new Date().getTime()\n      }, {\n        id: 6,\n        author: 'apple',\n        message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n        timestamp: new Date().getTime()\n      }, {\n        id: 7,\n        author: 'orange',\n        message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n        timestamp: new Date().getTime()\n      }, {\n        id: 8,\n        author: 'orange',\n        message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n        timestamp: new Date().getTime()\n      }, {\n        id: 9,\n        author: 'apple',\n        message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n        timestamp: new Date().getTime()\n      }, {\n        id: 10,\n        author: 'orange',\n        message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n        timestamp: new Date().getTime()\n      }];\n      this.setState({\n        tempMessages\n      });\n      console.log(tempMessages);\n    };\n    this.state = {\n      conversations: [],\n      tempMessages: [],\n      messages: \"\",\n      loading: true\n    };\n  }\n  componentDidMount() {\n    this.getConversations();\n    this.getMessages();\n  }\n  handleSubmit(event) {\n    console.log(event.target);\n    alert(event.target.id);\n    getMessage(event.target.id);\n    // setContactInfo({ FirstName: \"\", SecondName: \"\", Age: \"\", Nationality: \"\", EmailAdress: \"\"}); //reset form values after submit\n  }\n\n  renderForecastsTable(conversations) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messenger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversation-list scrollable sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      title: \"Messenger\",\n      leftItems: [/*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"cog\",\n        icon: \"ion-ios-cog\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      })],\n      rightItems: [/*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"add\",\n        icon: \"ion-ios-add-circle-outline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ConversationSearch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), conversations.map(conversation => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversation-list-item\",\n      key: conversation.userid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"conversation-photo\",\n      src: \"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava3.webp\",\n      alt: \"conversation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversation-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"conversation-title\",\n      id: conversation.userid,\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }, conversation.userName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"conversation-snippet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, \"Offline\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(MessageList, {\n      messages2: this.messages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 22\n      }\n    })));\n  }\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 18\n      }\n    }, \"Loading...\")) : this.renderForecastsTable(this.state.conversations);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, contents);\n  }\n  async getConversations() {\n    const token = await authService.getAccessToken();\n    const response = await fetch('api/Messages/GetUser', {\n      headers: !token ? {} : {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    this.setState({\n      conversations: data,\n      messages: \"ffgd\",\n      loading: false\n    });\n  }\n  async getMessage(id) {\n    const token = await authService.getAccessToken();\n    const response = await fetch('api/Messages/' + id, {\n      headers: !token ? {} : {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    this.setState({\n      conversations: data,\n      messages: \"ffgd\",\n      loading: false\n    });\n  }\n}\nConversationList2.displayName = ConversationList2.name;","map":{"version":3,"names":["React","Component","useState","useEffect","ConversationSearch","ConversationListItem","Toolbar","ToolbarButton","axios","apiGet","usersService","authService","Message","moment","MessageList","MY_USER_ID","ConversationList2","constructor","props","getMessages","tempMessages","id","author","message","timestamp","Date","getTime","setState","console","log","state","conversations","messages","loading","componentDidMount","getConversations","handleSubmit","event","target","alert","getMessage","renderForecastsTable","map","conversation","userid","userName","render","contents","token","getAccessToken","response","fetch","headers","data","json","displayName","name"],"sources":["/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/components/Chat/ConversationList2.js"],"sourcesContent":["import React, {Component,useState, useEffect} from 'react';\nimport ConversationSearch from './ConversationSearch';\nimport ConversationListItem from './ConversationListItem';\nimport Toolbar from './Toolbar';\nimport ToolbarButton from './ToolbarButton';\nimport axios from 'axios';\nimport { apiGet } from './api';\nimport './Style/ConversationList.css';\nimport usersService from '../users/UsersService';\nimport authService from '../api-authorization/AuthorizeService'\nimport Message from './Message';\nimport moment from 'moment';\nimport MessageList from './MessageList';\nconst MY_USER_ID = 'apple';\nexport class ConversationList2 extends Component {\n    static displayName = ConversationList2.name;\n\n    constructor(props) {\n        super(props);\n        this.state = { conversations: [], tempMessages: [], messages: \"\", loading: true };\n    }\n  \n\n     \n    \n     getMessages = () => {\n        var tempMessages = [\n            {\n                id: 1,\n                author: 'apple',\n                message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n                timestamp: new Date().getTime()\n            },\n            {\n                id: 2,\n                author: 'orange',\n                message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n                timestamp: new Date().getTime()\n            },\n            {\n                id: 3,\n                author: 'orange',\n                message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n                timestamp: new Date().getTime()\n            },\n            {\n                id: 4,\n                author: 'apple',\n                message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n                timestamp: new Date().getTime()\n            },\n            {\n                id: 5,\n                author: 'apple',\n                message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n                timestamp: new Date().getTime()\n            },\n            {\n                id: 6,\n                author: 'apple',\n                message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n                timestamp: new Date().getTime()\n            },\n            {\n                id: 7,\n                author: 'orange',\n                message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n                timestamp: new Date().getTime()\n            },\n            {\n                id: 8,\n                author: 'orange',\n                message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n                timestamp: new Date().getTime()\n            },\n            {\n                id: 9,\n                author: 'apple',\n                message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n                timestamp: new Date().getTime()\n            },\n            {\n                id: 10,\n                author: 'orange',\n                message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n                timestamp: new Date().getTime()\n            }\n\n         ]\n         this.setState({ tempMessages });\n         console.log(tempMessages)\n         \n    }\n    componentDidMount() {\n        this.getConversations();\n        this.getMessages();\n    }\n    handleSubmit(event) {\n      \n        console.log(event.target)\n        alert(event.target.id);\n        getMessage(event.target.id);\n        // setContactInfo({ FirstName: \"\", SecondName: \"\", Age: \"\", Nationality: \"\", EmailAdress: \"\"}); //reset form values after submit\n\n    }\n     renderForecastsTable(conversations) {\n         return (\n             <div className = \"messenger\" >\n            <div className=\"conversation-list scrollable sidebar\">\n            \n                <Toolbar\n                    title=\"Messenger\"\n                    leftItems={[\n                        <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n                    ]}\n                    rightItems={[\n                        <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n                    ]}\n                />\n                <ConversationSearch />\n                {\n                    conversations.map(conversation =>\n\n                        <div className=\"conversation-list-item\" key={conversation.userid}  >\n                            <img className=\"conversation-photo\" src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava3.webp\" alt=\"conversation\" />\n                            <div className=\"conversation-info\" >\n                                <h1 className=\"conversation-title\" id={conversation.userid}onClick={this.handleSubmit}>{conversation.userName}</h1>\n                                <p className=\"conversation-snippet\">Offline</p>\n                            </div>\n                        </div>\n                )\n                }\n\n             </div>\n                     <div className=\" content\">\n                     <MessageList messages2={this.messages}/>\n        </div>\n          </div >\n        );\n    }\n    render() {\n        let contents = this.state.loading\n            ? <p><em>Loading...</em></p>\n            : this.renderForecastsTable(this.state.conversations);\n\n        return (\n            <div>\n              \n                {contents}\n\n            </div>\n\n        );\n    }\n\n    async getConversations() {\n        const token = await authService.getAccessToken();\n        const response = await fetch('api/Messages/GetUser', {\n            headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\n        });\n        const data = await response.json();\n        this.setState({ conversations: data, messages:\"ffgd\", loading: false });\n        \n    }\n    async getMessage(id) {\n        const token = await authService.getAccessToken();\n        const response = await fetch('api/Messages/'+id, {\n            headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\n        });\n        const data = await response.json();\n        this.setState({ conversations: data, messages: \"ffgd\", loading: false });\n\n    }M\n\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}