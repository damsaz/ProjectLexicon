{"ast":null,"code":"var _jsxFileName = \"/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/components/api-authorization/LoginMenu.js\";\nimport React, { Component, Fragment } from 'react';\nimport { NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport authService from './AuthorizeService';\nimport { ApplicationPaths } from './ApiAuthorizationConstants';\nimport { withTranslation } from 'react-i18next';\nclass LoginMenuPlain extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticated: false,\n      userName: null\n    };\n  }\n  componentDidMount() {\n    this._subscription = authService.subscribe(() => this.populateState());\n    this.populateState();\n  }\n  componentWillUnmount() {\n    authService.unsubscribe(this._subscription);\n  }\n  async populateState() {\n    const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()]);\n    this.setState({\n      isAuthenticated,\n      userName: user && user.name\n    });\n  }\n  render() {\n    const {\n      isAuthenticated,\n      userName\n    } = this.state;\n    if (!isAuthenticated) {\n      const registerPath = `${ApplicationPaths.Register}`;\n      const loginPath = `${ApplicationPaths.Login}`;\n      return this.anonymousView(registerPath, loginPath);\n    } else {\n      const profilePath = `${ApplicationPaths.Profile}`;\n      const logoutPath = {\n        pathname: `${ApplicationPaths.LogOut}`,\n        state: {\n          local: true\n        }\n      };\n      return this.authenticatedView(userName, profilePath, logoutPath);\n    }\n  }\n  authenticatedView(userName, profilePath, logoutPath) {\n    const {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      tag: Link,\n      className: \"text-dark\",\n      to: profilePath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, t('Hello'), \" \", userName)), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      tag: Link,\n      className: \"text-dark\",\n      to: logoutPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, t('Logout'))));\n  }\n  anonymousView(registerPath, loginPath) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      tag: Link,\n      className: \"text-dark\",\n      to: registerPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      tag: Link,\n      className: \"text-dark\",\n      to: loginPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Login\")));\n  }\n}\nexport const LoginMenu = withTranslation()(LoginMenuPlain);","map":{"version":3,"names":["React","Component","Fragment","NavItem","NavLink","Link","authService","ApplicationPaths","withTranslation","LoginMenuPlain","constructor","props","state","isAuthenticated","userName","componentDidMount","_subscription","subscribe","populateState","componentWillUnmount","unsubscribe","user","Promise","all","getUser","setState","name","render","registerPath","Register","loginPath","Login","anonymousView","profilePath","Profile","logoutPath","pathname","LogOut","local","authenticatedView","t","LoginMenu"],"sources":["/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/components/api-authorization/LoginMenu.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport authService from './AuthorizeService';\nimport { ApplicationPaths } from './ApiAuthorizationConstants';\nimport { withTranslation } from 'react-i18next';\n\nclass LoginMenuPlain extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isAuthenticated: false,\n            userName: null\n        };\n    }\n\n    componentDidMount() {\n        this._subscription = authService.subscribe(() => this.populateState());\n        this.populateState();\n    }\n\n    componentWillUnmount() {\n        authService.unsubscribe(this._subscription);\n    }\n\n    async populateState() {\n        const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()])\n        this.setState({\n            isAuthenticated,\n            userName: user && user.name\n        });\n    }\n\n    render() {\n        const { isAuthenticated, userName } = this.state;\n        if (!isAuthenticated) {\n            const registerPath = `${ApplicationPaths.Register}`;\n            const loginPath = `${ApplicationPaths.Login}`;\n            return this.anonymousView(registerPath, loginPath);\n        } else {\n            const profilePath = `${ApplicationPaths.Profile}`;\n            const logoutPath = { pathname: `${ApplicationPaths.LogOut}`, state: { local: true } };\n            return this.authenticatedView(userName, profilePath, logoutPath);\n        }\n    }\n\n\tauthenticatedView(userName, profilePath, logoutPath) {\n\t\tconst { t,  } = this.props;\n\n        return (<Fragment>\n            <NavItem>\n\t\t\t\t<NavLink tag={Link} className=\"text-dark\" to={profilePath}>\n\t\t\t\t\t{t('Hello')} {userName}\n\t\t\t\t</NavLink>\n            </NavItem>\n            <NavItem>\n\t\t\t\t<NavLink tag={Link} className=\"text-dark\" to={logoutPath}>\n\t\t\t\t\t{t('Logout')}\n\t\t\t\t</NavLink>\n            </NavItem>\n        </Fragment>);\n    }\n\n    anonymousView(registerPath, loginPath) {\n        return (<Fragment>\n            <NavItem>\n                <NavLink tag={Link} className=\"text-dark\" to={registerPath}>Register</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink tag={Link} className=\"text-dark\" to={loginPath}>Login</NavLink>\n            </NavItem>\n        </Fragment>);\n    }\n}\n\nexport const LoginMenu = withTranslation()(LoginMenuPlain);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}