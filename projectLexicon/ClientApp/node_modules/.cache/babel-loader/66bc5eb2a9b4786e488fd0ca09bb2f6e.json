{"ast":null,"code":"import { UserManager, WebStorageStateStore } from 'oidc-client';\nimport { ApplicationPaths, ApplicationName, UserRoles } from './ApiAuthorizationConstants';\nexport class AuthorizeService {\n  constructor() {\n    this._callbacks = [];\n    this._nextSubscriptionId = 0;\n    this._user = null;\n    this._isAuthenticated = false;\n    this._popUpDisabled = true;\n  }\n  async isAuthenticated() {\n    const user = await this.getUser();\n    return !!user;\n  }\n  async getUser() {\n    if (this._user && this._user.profile) {\n      return this._user.profile;\n    }\n    await this.ensureUserManagerInitialized();\n    const user = await this.userManager.getUser();\n    return user && user.profile;\n  }\n  async getAccessToken() {\n    await this.ensureUserManagerInitialized();\n    const user = await this.userManager.getUser();\n    return user && user.access_token;\n  }\n  async hasRole(role) {\n    const user = await this.getUser();\n    if (user) {\n      if (user.role instanceof Array) return user.role.includes(UserRoles.Administrator);else return user.role === UserRoles.Administrator;\n    } else return false;\n  }\n  async signIn(state) {\n    await this.ensureUserManagerInitialized();\n    try {\n      const silentUser = await this.userManager.signinSilent(this.createArguments());\n      this.updateState(silentUser);\n      return this.success(state);\n    } catch (silentError) {\n      console.log(\"Silent authentication error: \", silentError);\n      try {\n        if (this._popUpDisabled) {\n          throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.');\n        }\n        const popUpUser = await this.userManager.signinPopup(this.createArguments());\n        this.updateState(popUpUser);\n        return this.success(state);\n      } catch (popUpError) {\n        if (popUpError.message === \"Popup window closed\") {\n          return this.error(\"The user closed the window.\");\n        } else if (!this._popUpDisabled) {\n          console.log(\"Popup authentication error: \", popUpError);\n        }\n        try {\n          await this.userManager.signinRedirect(this.createArguments(state));\n          return this.redirect();\n        } catch (redirectError) {\n          console.log(\"Redirect authentication error: \", redirectError);\n          return this.error(redirectError);\n        }\n      }\n    }\n  }\n  async completeSignIn(url) {\n    try {\n      await this.ensureUserManagerInitialized();\n      const user = await this.userManager.signinCallback(url);\n      this.updateState(user);\n      return this.success(user && user.state);\n    } catch (error) {\n      console.log('There was an error signing in: ', error);\n      return this.error('There was an error signing in.');\n    }\n  }\n  async signOut(state) {\n    await this.ensureUserManagerInitialized();\n    try {\n      if (this._popUpDisabled) {\n        throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.');\n      }\n      await this.userManager.signoutPopup(this.createArguments());\n      this.updateState(undefined);\n      return this.success(state);\n    } catch (popupSignOutError) {\n      console.log(\"Popup signout error: \", popupSignOutError);\n      try {\n        await this.userManager.signoutRedirect(this.createArguments(state));\n        return this.redirect();\n      } catch (redirectSignOutError) {\n        console.log(\"Redirect signout error: \", redirectSignOutError);\n        return this.error(redirectSignOutError);\n      }\n    }\n  }\n  async completeSignOut(url) {\n    await this.ensureUserManagerInitialized();\n    try {\n      const response = await this.userManager.signoutCallback(url);\n      this.updateState(null);\n      return this.success(response && response.data);\n    } catch (error) {\n      console.log(`There was an error trying to log out '${error}'.`);\n      return this.error(error);\n    }\n  }\n  updateState(user) {\n    this._user = user;\n    this._isAuthenticated = !!this._user;\n    this.notifySubscribers();\n  }\n  subscribe(callback) {\n    this._callbacks.push({\n      callback,\n      subscription: this._nextSubscriptionId++\n    });\n    return this._nextSubscriptionId - 1;\n  }\n  unsubscribe(subscriptionId) {\n    const subscriptionIndex = this._callbacks.map((element, index) => element.subscription === subscriptionId ? {\n      found: true,\n      index\n    } : {\n      found: false\n    }).filter(element => element.found === true);\n    if (subscriptionIndex.length !== 1) {\n      throw new Error(`Found an invalid number of subscriptions ${subscriptionIndex.length}`);\n    }\n    this._callbacks = this._callbacks.splice(subscriptionIndex[0].index, 1);\n  }\n  notifySubscribers() {\n    for (let i = 0; i < this._callbacks.length; i++) {\n      const callback = this._callbacks[i].callback;\n      callback();\n    }\n  }\n  createArguments(state) {\n    return {\n      useReplaceToNavigate: true,\n      data: state\n    };\n  }\n  error(message) {\n    return {\n      status: AuthenticationResultStatus.Fail,\n      message\n    };\n  }\n  success(state) {\n    return {\n      status: AuthenticationResultStatus.Success,\n      state\n    };\n  }\n  redirect() {\n    return {\n      status: AuthenticationResultStatus.Redirect\n    };\n  }\n  async ensureUserManagerInitialized() {\n    if (this.userManager !== undefined) {\n      return;\n    }\n    let response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\n    if (!response.ok) {\n      throw new Error(`Could not load settings for '${ApplicationName}'`);\n    }\n    let settings = await response.json();\n    settings.automaticSilentRenew = true;\n    settings.includeIdTokenInSilentRenew = true;\n    settings.userStore = new WebStorageStateStore({\n      prefix: ApplicationName\n    });\n    this.userManager = new UserManager(settings);\n    this.userManager.events.addUserSignedOut(async () => {\n      await this.userManager.removeUser();\n      this.updateState(undefined);\n    });\n  }\n  static get instance() {\n    return authService;\n  }\n}\nconst authService = new AuthorizeService();\nexport default authService;\nexport const AuthenticationResultStatus = {\n  Redirect: 'redirect',\n  Success: 'success',\n  Fail: 'fail'\n};","map":{"version":3,"names":["UserManager","WebStorageStateStore","ApplicationPaths","ApplicationName","UserRoles","AuthorizeService","_callbacks","_nextSubscriptionId","_user","_isAuthenticated","_popUpDisabled","isAuthenticated","user","getUser","profile","ensureUserManagerInitialized","userManager","getAccessToken","access_token","hasRole","role","Array","includes","Administrator","signIn","state","silentUser","signinSilent","createArguments","updateState","success","silentError","console","log","Error","popUpUser","signinPopup","popUpError","message","error","signinRedirect","redirect","redirectError","completeSignIn","url","signinCallback","signOut","signoutPopup","undefined","popupSignOutError","signoutRedirect","redirectSignOutError","completeSignOut","response","signoutCallback","data","notifySubscribers","subscribe","callback","push","subscription","unsubscribe","subscriptionId","subscriptionIndex","map","element","index","found","filter","length","splice","i","useReplaceToNavigate","status","AuthenticationResultStatus","Fail","Success","Redirect","fetch","ApiAuthorizationClientConfigurationUrl","ok","settings","json","automaticSilentRenew","includeIdTokenInSilentRenew","userStore","prefix","events","addUserSignedOut","removeUser","instance","authService"],"sources":["/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/components/api-authorization/AuthorizeService.js"],"sourcesContent":["import { UserManager, WebStorageStateStore } from 'oidc-client';\nimport { ApplicationPaths, ApplicationName, UserRoles } from './ApiAuthorizationConstants';\n\nexport class AuthorizeService {\n    _callbacks = [];\n    _nextSubscriptionId = 0;\n    _user = null;\n    _isAuthenticated = false;\n\n\n    _popUpDisabled = true;\n\n    async isAuthenticated() {\n        const user = await this.getUser();\n        return !!user;\n    }\n\n    async getUser() {\n        if (this._user && this._user.profile) {\n            return this._user.profile;\n        }\n\n        await this.ensureUserManagerInitialized();\n        const user = await this.userManager.getUser();\n        return user && user.profile;\n    }\n\n    async getAccessToken() {\n        await this.ensureUserManagerInitialized();\n        const user = await this.userManager.getUser();\n        return user && user.access_token;\n    }\n\n\tasync hasRole(role) {\n\t\tconst user = await this.getUser();\n\n\t\tif (user) {\n\t\t\tif (user.role instanceof Array)\n\t\t\t\treturn user.role.includes(UserRoles.Administrator); \n\t\t\telse\n                return user.role === UserRoles.Administrator;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\n\n    async signIn(state) {\n        await this.ensureUserManagerInitialized();\n        try {\n            const silentUser = await this.userManager.signinSilent(this.createArguments());\n            this.updateState(silentUser);\n            return this.success(state);\n        } catch (silentError) {\n            \n            console.log(\"Silent authentication error: \", silentError);\n\n            try {\n                if (this._popUpDisabled) {\n                    throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\n                }\n\n                const popUpUser = await this.userManager.signinPopup(this.createArguments());\n                this.updateState(popUpUser);\n                return this.success(state);\n            } catch (popUpError) {\n                if (popUpError.message === \"Popup window closed\") {\n                   \n                    return this.error(\"The user closed the window.\");\n                } else if (!this._popUpDisabled) {\n                    console.log(\"Popup authentication error: \", popUpError);\n                }\n\n                \n\t\t\t\ttry {\n                    await this.userManager.signinRedirect(this.createArguments(state));\n                    return this.redirect();\n                } catch (redirectError) {\n                    console.log(\"Redirect authentication error: \", redirectError);\n                    return this.error(redirectError);\n                }\n            }\n        }\n    }\n\n    async completeSignIn(url) {\n        try {\n            await this.ensureUserManagerInitialized();\n            const user = await this.userManager.signinCallback(url);\n            this.updateState(user);\n            return this.success(user && user.state);\n        } catch (error) {\n            console.log('There was an error signing in: ', error);\n            return this.error('There was an error signing in.');\n        }\n    }\n\n    async signOut(state) {\n        await this.ensureUserManagerInitialized();\n        try {\n            if (this._popUpDisabled) {\n                throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\n            }\n\n            await this.userManager.signoutPopup(this.createArguments());\n            this.updateState(undefined);\n            return this.success(state);\n        } catch (popupSignOutError) {\n            console.log(\"Popup signout error: \", popupSignOutError);\n            try {\n                await this.userManager.signoutRedirect(this.createArguments(state));\n                return this.redirect();\n            } catch (redirectSignOutError) {\n                console.log(\"Redirect signout error: \", redirectSignOutError);\n                return this.error(redirectSignOutError);\n            }\n        }\n    }\n\n    async completeSignOut(url) {\n        await this.ensureUserManagerInitialized();\n        try {\n            const response = await this.userManager.signoutCallback(url);\n            this.updateState(null);\n            return this.success(response && response.data);\n        } catch (error) {\n            console.log(`There was an error trying to log out '${error}'.`);\n            return this.error(error);\n        }\n    }\n\n    updateState(user) {\n        this._user = user;\n        this._isAuthenticated = !!this._user;\n        this.notifySubscribers();\n    }\n\n    subscribe(callback) {\n        this._callbacks.push({ callback, subscription: this._nextSubscriptionId++ });\n        return this._nextSubscriptionId - 1;\n    }\n\n    unsubscribe(subscriptionId) {\n        const subscriptionIndex = this._callbacks\n            .map((element, index) => element.subscription === subscriptionId ? { found: true, index } : { found: false })\n            .filter(element => element.found === true);\n        if (subscriptionIndex.length !== 1) {\n            throw new Error(`Found an invalid number of subscriptions ${subscriptionIndex.length}`);\n        }\n\n        this._callbacks = this._callbacks.splice(subscriptionIndex[0].index, 1);\n    }\n\n    notifySubscribers() {\n        for (let i = 0; i < this._callbacks.length; i++) {\n            const callback = this._callbacks[i].callback;\n            callback();\n        }\n    }\n\n    createArguments(state) {\n        return { useReplaceToNavigate: true, data: state };\n    }\n\n    error(message) {\n        return { status: AuthenticationResultStatus.Fail, message };\n    }\n\n    success(state) {\n        return { status: AuthenticationResultStatus.Success, state };\n    }\n\n    redirect() {\n        return { status: AuthenticationResultStatus.Redirect };\n    }\n\n    async ensureUserManagerInitialized() {\n        if (this.userManager !== undefined) {\n            return;\n        }\n\n        let response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\n        if (!response.ok) {\n            throw new Error(`Could not load settings for '${ApplicationName}'`);\n        }\n\n        let settings = await response.json();\n        settings.automaticSilentRenew = true;\n        settings.includeIdTokenInSilentRenew = true;\n        settings.userStore = new WebStorageStateStore({\n            prefix: ApplicationName\n        });\n\n        this.userManager = new UserManager(settings);\n\n        this.userManager.events.addUserSignedOut(async () => {\n            await this.userManager.removeUser();\n            this.updateState(undefined);\n        });\n    }\n\n    static get instance() { return authService }\n}\n\nconst authService = new AuthorizeService();\n\nexport default authService;\n\nexport const AuthenticationResultStatus = {\n    Redirect: 'redirect',\n    Success: 'success',\n    Fail: 'fail'\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}