{"ast":null,"code":"var _jsxFileName = \"/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/components/Chat/ConversationList.js\";\nimport React, { useState, useEffect } from 'react';\nimport ConversationSearch from './ConversationSearch';\nimport ConversationListItem from './ConversationListItem';\nimport Toolbar from './Toolbar';\nimport ToolbarButton from './ToolbarButton';\nimport axios from 'axios';\nimport { apiGet } from './api';\nimport './Style/ConversationList.css';\nimport usersService from '../users/UsersService';\nexport default function ConversationList(props) {\n  const [conversations, setConversations] = useState([]);\n  useEffect(() => {\n    getConversations();\n  }, []);\n  const [isPending, setIsPending] = useState(true);\n  const getConversations = () => {\n    // setConversations(usersService.getUserChat());\n\n    // let x = usersService.getUserChat();\n    const newItem = apiGet(\"Messages/GetUser\");\n    if (newItem.errText) {\n      alert(newItem.errText);\n    }\n    setConversations(newItem);\n  };\n  console.log(conversations);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    title: \"Messenger\",\n    leftItems: [/*#__PURE__*/React.createElement(ToolbarButton, {\n      key: \"cog\",\n      icon: \"ion-ios-cog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    })],\n    rightItems: [/*#__PURE__*/React.createElement(ToolbarButton, {\n      key: \"add\",\n      icon: \"ion-ios-add-circle-outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ConversationSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","useEffect","ConversationSearch","ConversationListItem","Toolbar","ToolbarButton","axios","apiGet","usersService","ConversationList","props","conversations","setConversations","getConversations","isPending","setIsPending","newItem","errText","alert","console","log"],"sources":["/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/components/Chat/ConversationList.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ConversationSearch from './ConversationSearch';\nimport ConversationListItem from './ConversationListItem';\nimport Toolbar from './Toolbar';\nimport ToolbarButton from './ToolbarButton';\nimport axios from 'axios';\nimport { apiGet } from './api';\nimport './Style/ConversationList.css';\nimport usersService from '../users/UsersService';\n\nexport default  function ConversationList(props) {\n  const [conversations, setConversations] = useState([]);\n  useEffect(() => {\n    getConversations()\n  },[])\n\n    const [isPending, setIsPending] = useState(true);\n\n    const  getConversations = () => {\n    // setConversations(usersService.getUserChat());\n\n       // let x = usersService.getUserChat();\n        const newItem = apiGet(\"Messages/GetUser\");\n        if (newItem.errText) {\n            alert(newItem.errText);\n        }\n        setConversations(newItem);\n    }\n   \n    console.log(conversations);\n    return (\n      <div className=\"conversation-list\">\n        <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        />\n        <ConversationSearch />\n           \n      </div>\n    );\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,OAAO;AAC9B,OAAO,8BAA8B;AACrC,OAAOC,YAAY,MAAM,uBAAuB;AAEhD,eAAgB,SAASC,gBAAgB,CAACC,KAAK,EAAE;EAC/C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtDC,SAAS,CAAC,MAAM;IACdY,gBAAgB,EAAE;EACpB,CAAC,EAAC,EAAE,CAAC;EAEH,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAOa,gBAAgB,GAAG,MAAM;IAChC;;IAEG;IACC,MAAMG,OAAO,GAAGT,MAAM,CAAC,kBAAkB,CAAC;IAC1C,IAAIS,OAAO,CAACC,OAAO,EAAE;MACjBC,KAAK,CAACF,OAAO,CAACC,OAAO,CAAC;IAC1B;IACAL,gBAAgB,CAACI,OAAO,CAAC;EAC7B,CAAC;EAEDG,OAAO,CAACC,GAAG,CAACT,aAAa,CAAC;EAC1B,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAChC,oBAAC,OAAO;IACN,KAAK,EAAC,WAAW;IACjB,SAAS,EAAE,cACT,oBAAC,aAAa;MAAC,GAAG,EAAC,KAAK;MAAC,IAAI,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CAC9C;IACF,UAAU,EAAE,cACV,oBAAC,aAAa;MAAC,GAAG,EAAC,KAAK;MAAC,IAAI,EAAC,4BAA4B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CAC7D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,eACF,oBAAC,kBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAElB;AAEZ"},"metadata":{},"sourceType":"module"}