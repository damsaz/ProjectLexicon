{"ast":null,"code":"const isLocalhost = Boolean(window.location.hostname === 'localhost' || window.location.hostname === '[::1]' || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl);\n      } else {\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker.register(swUrl).then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            console.log('New content is available; please refresh.');\n          } else {\n            console.log('Content is cached for offline use.');\n          }\n        }\n      };\n    };\n  }).catch(error => {\n    console.error('Error during service worker registration:', error);\n  });\n}\nfunction checkValidServiceWorker(swUrl) {\n  fetch(swUrl).then(response => {\n    if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      registerValidSW(swUrl);\n    }\n  }).catch(() => {\n    console.log('No internet connection found. App is running in offline mode.');\n  });\n}\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","process","env","NODE_ENV","navigator","publicUrl","URL","PUBLIC_URL","origin","addEventListener","swUrl","checkValidServiceWorker","registerValidSW","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","fetch","response","status","headers","get","indexOf","ready","unregister","reload"],"sources":["/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/registerServiceWorker.js"],"sourcesContent":["\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n\n  window.location.hostname === '[::1]' ||\n\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n       \n        checkValidServiceWorker(swUrl);\n      } else {\n     \n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n\n              console.log('New content is available; please refresh.');\n            } else {\n\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl) {\n\n  fetch(swUrl)\n    .then(response => {\n     \n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n\n\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n     \n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"mappings":"AAEA,MAAMA,WAAW,GAAGC,OAAO,CACzBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IAExCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,OAAO,IAEpCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAC5B,wDAAwD,CACzD,CACF;AAED,eAAe,SAASC,QAAQ,GAAI;EAClC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAI,eAAe,IAAIC,SAAS,EAAE;IAEzE,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAACL,OAAO,CAACC,GAAG,CAACK,UAAU,EAAEX,MAAM,CAACC,QAAQ,CAAC;IAClE,IAAIQ,SAAS,CAACG,MAAM,KAAKZ,MAAM,CAACC,QAAQ,CAACW,MAAM,EAAE;MAE/C;IACF;IAEAZ,MAAM,CAACa,gBAAgB,CAAC,MAAM,EAAE,MAAM;MACpC,MAAMC,KAAK,GAAI,GAAET,OAAO,CAACC,GAAG,CAACK,UAAW,oBAAmB;MAE3D,IAAIb,WAAW,EAAE;QAEfiB,uBAAuB,CAACD,KAAK,CAAC;MAChC,CAAC,MAAM;QAELE,eAAe,CAACF,KAAK,CAAC;MACxB;IACF,CAAC,CAAC;EACJ;AACF;AAEA,SAASE,eAAe,CAAEF,KAAK,EAAE;EAC/BN,SAAS,CAACS,aAAa,CACpBb,QAAQ,CAACU,KAAK,CAAC,CACfI,IAAI,CAACC,YAAY,IAAI;IACpBA,YAAY,CAACC,aAAa,GAAG,MAAM;MACjC,MAAMC,gBAAgB,GAAGF,YAAY,CAACG,UAAU;MAChDD,gBAAgB,CAACE,aAAa,GAAG,MAAM;QACrC,IAAIF,gBAAgB,CAACG,KAAK,KAAK,WAAW,EAAE;UAC1C,IAAIhB,SAAS,CAACS,aAAa,CAACQ,UAAU,EAAE;YAEtCC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;UAC1D,CAAC,MAAM;YAELD,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;UACnD;QACF;MACF,CAAC;IACH,CAAC;EACH,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACdH,OAAO,CAACG,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;EACnE,CAAC,CAAC;AACN;AAEA,SAASd,uBAAuB,CAAED,KAAK,EAAE;EAEvCgB,KAAK,CAAChB,KAAK,CAAC,CACTI,IAAI,CAACa,QAAQ,IAAI;IAEhB,IACEA,QAAQ,CAACC,MAAM,KAAK,GAAG,IACvBD,QAAQ,CAACE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EACjE;MAGA3B,SAAS,CAACS,aAAa,CAACmB,KAAK,CAAClB,IAAI,CAACC,YAAY,IAAI;QACjDA,YAAY,CAACkB,UAAU,EAAE,CAACnB,IAAI,CAAC,MAAM;UACnClB,MAAM,CAACC,QAAQ,CAACqC,MAAM,EAAE;QAC1B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,MAAM;MAELtB,eAAe,CAACF,KAAK,CAAC;IACxB;EACF,CAAC,CAAC,CACDc,KAAK,CAAC,MAAM;IACXF,OAAO,CAACC,GAAG,CACT,+DAA+D,CAChE;EACH,CAAC,CAAC;AACN;AAEA,OAAO,SAASU,UAAU,GAAI;EAC5B,IAAI,eAAe,IAAI7B,SAAS,EAAE;IAChCA,SAAS,CAACS,aAAa,CAACmB,KAAK,CAAClB,IAAI,CAACC,YAAY,IAAI;MACjDA,YAAY,CAACkB,UAAU,EAAE;IAC3B,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module"}