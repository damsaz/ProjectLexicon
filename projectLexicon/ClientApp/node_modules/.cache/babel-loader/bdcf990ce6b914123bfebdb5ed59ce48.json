{"ast":null,"code":"import axios from \"axios\";\nimport authService from '../components/api-authorization/AuthorizeService';\nlet userId = 99; // Guest\nexport function setUserId(newUserId) {\n  userId = newUserId;\n}\nlet nextUid = 1;\nexport function getNextUid() {\n  return nextUid++;\n}\nexport const callServer = true;\nconst URL_BASE = \"api\";\nconst configGetJson = {\n  withCredentials: true,\n  headers: {\n    Accept: \"application/json\"\n  }\n};\nconst configPostJson = {\n  withCredentials: true,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n};\nconst configPostText = {\n  withCredentials: true,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"text/plain\"\n  }\n};\nfunction checkResponse(response) {\n  let errText = \"\";\n  if (!response) {\n    errText = `API Call status No Response`;\n  }\n  if (!response.status) {\n    errText = `API Call Missing Response status`;\n  } else if (response.status < 200 || response.status > 299) {\n    errText = `API Call status ${response.status}`;\n  } else if (!response.data) {\n    errText = `API Call No data returned`;\n  } else if (response.data.errorMessage) {\n    errText = `API Call Error Message: ${response.data.errorMessage}`;\n  }\n  if (errText) {\n    console.log(errText);\n    throw new Error(errText);\n  }\n}\nexport async function apiGet(url, qryParams) {\n  const params = new URLSearchParams(qryParams);\n  const token = await authService.getAccessToken();\n  const response = await fetch(`${URL_BASE}/${url}?${params}`, {\n    headers: !token ? {} : {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const data = await response.json();\n  return data;\n}\nexport async function apiPost(url, qryParams, data) {\n  const params = new URLSearchParams(qryParams);\n  const token = await authService.getAccessToken();\n  let config = {\n    ...configPostJson,\n    headers: !token ? {} : {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  try {\n    const response = await axios.post(`${URL_BASE}/${url}?${params}`, data, config);\n    console.log(response);\n    checkResponse(response);\n    return response.data;\n  } catch (error) {\n    console.log(error.message || error);\n    throw error;\n  }\n}\n\n//export async function getJson(url, qryParams, data) {\n//  const token = await authService.getAccessToken();\n//  const params = new URLSearchParams(qryParams);\n//  try {\n//    const response = await fetch(`forumcategory/Item/?Id=${popupId}`, {\n//      headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\n//    });\n\n//    const response = await axios.get(`${URL_BASE}/${url}?${params}`, data, configGetJson);\n//    console.log(response);\n//    checkResponse(response);\n//    return response.data.result;\n//    } catch (error) {\n//    console.log(error.message || error);\n//    throw error;\n//  }\n//}\n\nexport async function postJson(url, qryParams, data) {\n  qryParams.currentUser = userId;\n  const params = new URLSearchParams(qryParams);\n  try {\n    const response = await axios.post(`${URL_BASE}/${url}?${params}`, data, configPostJson);\n    console.log(response);\n    checkResponse(response);\n    return response.data.result;\n  } catch (error) {\n    console.log(error.message || error);\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","authService","userId","setUserId","newUserId","nextUid","getNextUid","callServer","URL_BASE","configGetJson","withCredentials","headers","Accept","configPostJson","configPostText","checkResponse","response","errText","status","data","errorMessage","console","log","Error","apiGet","url","qryParams","params","URLSearchParams","token","getAccessToken","fetch","json","apiPost","config","post","error","message","postJson","currentUser","result"],"sources":["/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\nimport authService from '../components/api-authorization/AuthorizeService'\n\nlet userId = 99; // Guest\nexport function setUserId(newUserId) {\n  userId = newUserId;\n}\n\n\nlet nextUid = 1;\nexport function getNextUid() {\n  return nextUid++;\n}\n\nexport const callServer = true;\nconst URL_BASE = \"api\";\n\nconst configGetJson = {\n  withCredentials: true,\n  headers: {\n    Accept: \"application/json\",\n  },\n};\n\nconst configPostJson = {\n  withCredentials: true,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nconst configPostText = {\n  withCredentials: true,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"text/plain\",\n  },\n};\n\nfunction checkResponse(response) {\n  let errText = \"\";\n  if (!response) {\n    errText = `API Call status No Response`;\n  }\n  if (!response.status) {\n    errText = `API Call Missing Response status`;\n  } else if (response.status < 200 || response.status > 299) {\n    errText = `API Call status ${response.status}`;\n  } else if (!response.data) {\n    errText = `API Call No data returned`;\n  } else if (response.data.errorMessage) {\n    errText = `API Call Error Message: ${response.data.errorMessage}`;\n  }\n  if (errText) {\n    console.log(errText);\n    throw new Error(errText);\n  }\n}\n\nexport async function apiGet(url, qryParams) {\n  const params = new URLSearchParams(qryParams);\n  const token = await authService.getAccessToken();\n  const response = await fetch(`${URL_BASE}/${url}?${params}`, {\n    headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\n  });\n  const data = await response.json();\n  return data;\n}\n\nexport async function apiPost(url, qryParams, data) {\n  const params = new URLSearchParams(qryParams);\n  const token = await authService.getAccessToken();\n  let config = {\n    ...configPostJson,\n    headers: !token\n      ? {}\n      : { 'Authorization': `Bearer ${token}` }\n  }\n  try {\n    const response = await axios.post(`${URL_BASE}/${url}?${params}`, data, config);\n    console.log(response);\n    checkResponse(response);\n    return response.data;\n  } catch (error) {\n    console.log(error.message || error);\n    throw error;\n  }\n}\n\n\n\n\n\n//export async function getJson(url, qryParams, data) {\n//  const token = await authService.getAccessToken();\n//  const params = new URLSearchParams(qryParams);\n//  try {\n//    const response = await fetch(`forumcategory/Item/?Id=${popupId}`, {\n//      headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\n//    });\n\n//    const response = await axios.get(`${URL_BASE}/${url}?${params}`, data, configGetJson);\n//    console.log(response);\n//    checkResponse(response);\n//    return response.data.result;\n//    } catch (error) {\n//    console.log(error.message || error);\n//    throw error;\n//  }\n//}\n\n\n\n\nexport async function postJson(url, qryParams, data) {\n  qryParams.currentUser = userId;\n  const params = new URLSearchParams(qryParams);\n  try {\n    const response = await axios.post(`${URL_BASE}/${url}?${params}`, data, configPostJson);\n    console.log(response);\n    checkResponse(response);\n    return response.data.result;\n  } catch (error) {\n    console.log(error.message || error);\n    throw error;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}