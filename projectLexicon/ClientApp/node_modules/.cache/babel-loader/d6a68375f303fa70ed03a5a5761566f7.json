{"ast":null,"code":"var _jsxFileName = \"/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/components/Chat/ConversationList2.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport ConversationSearch from './ConversationSearch';\nimport ConversationListItem from './ConversationListItem';\nimport Toolbar from './Toolbar';\nimport ToolbarButton from './ToolbarButton';\nimport axios from 'axios';\nimport { apiGet } from './api';\nimport './Style/ConversationList.css';\nimport usersService from '../users/UsersService';\nimport authService from '../api-authorization/AuthorizeService';\nexport class ConversationList2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conversations: [],\n      loading: true\n    };\n  }\n  componentDidMount() {\n    this.getConversations();\n  }\n  static renderForecastsTable(conversations) {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped\",\n      \"aria-labelledby\": \"tabelLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, \"Temp. (C)\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, \"Temp. (F)\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, \"Summary\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, conversations.map(forecast => /*#__PURE__*/React.createElement(\"tr\", {\n      key: forecast.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, forecast.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, forecast.temperatureC), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, forecast.temperatureF), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, forecast.summary)))));\n  }\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }\n    }, \"Loading...\")) : ConversationList2.renderForecastsTable(this.state.conversations);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, contents);\n  }\n  async getConversations() {\n    const token = await authService.getAccessToken();\n    const response = await fetch('api/weatherforecast', {\n      headers: !token ? {} : {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    this.setState({\n      conversations: data,\n      loading: false\n    });\n  }\n}\nConversationList2.displayName = ConversationList2.name;","map":{"version":3,"names":["React","Component","useState","useEffect","ConversationSearch","ConversationListItem","Toolbar","ToolbarButton","axios","apiGet","usersService","authService","ConversationList2","constructor","props","state","conversations","loading","componentDidMount","getConversations","renderForecastsTable","map","forecast","date","temperatureC","temperatureF","summary","render","contents","token","getAccessToken","response","fetch","headers","data","json","setState","displayName","name"],"sources":["/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/components/Chat/ConversationList2.js"],"sourcesContent":["import React, {Component,useState, useEffect} from 'react';\nimport ConversationSearch from './ConversationSearch';\nimport ConversationListItem from './ConversationListItem';\nimport Toolbar from './Toolbar';\nimport ToolbarButton from './ToolbarButton';\nimport axios from 'axios';\nimport { apiGet } from './api';\nimport './Style/ConversationList.css';\nimport usersService from '../users/UsersService';\nimport authService from '../api-authorization/AuthorizeService'\n\nexport class ConversationList2 extends Component {\n    static displayName = ConversationList2.name;\n\n    constructor(props) {\n        super(props);\n        this.state = { conversations: [], loading: true };\n    }\n\n    componentDidMount() {\n        this.getConversations();\n    }\n\n    static renderForecastsTable(conversations) {\n        return (\n            <table className='table table-striped' aria-labelledby=\"tabelLabel\">\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>Temp. (C)</th>\n                        <th>Temp. (F)</th>\n                        <th>Summary</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {conversations.map(forecast =>\n                        <tr key={forecast.date}>\n                            <td>{forecast.date}</td>\n                            <td>{forecast.temperatureC}</td>\n                            <td>{forecast.temperatureF}</td>\n                            <td>{forecast.summary}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        );\n    }\n    render() {\n        let contents = this.state.loading\n            ? <p><em>Loading...</em></p>\n            : ConversationList2.renderForecastsTable(this.state.conversations);\n\n        return (\n            <div>\n                {contents}\n            </div>\n        );\n    }\n    \n    async getConversations() {\n        const token = await authService.getAccessToken();\n        const response = await fetch('api/weatherforecast', {\n            headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\n        });\n        const data = await response.json();\n        this.setState({ conversations: data, loading: false });\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}