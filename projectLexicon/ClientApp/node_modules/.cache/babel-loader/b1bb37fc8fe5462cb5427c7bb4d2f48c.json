{"ast":null,"code":"import axios from \"axios\";\nimport authService from '../api-authorization/AuthorizeService';\nlet nextUid = 1;\nexport function getNextUid() {\n  return nextUid++;\n}\nconst URL_BASE = \"api\";\nconst configPostJson = {\n  withCredentials: true,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n};\nfunction checkResponse(response) {\n  let errText = \"\";\n  if (!response) {\n    errText = `API Call status No Response`;\n  } else if (!response.status) {\n    errText = `API Call Missing Response status`;\n  } else if (response.status < 200 || response.status > 299) {\n    if (response.statusText) {\n      errText = `API Call error ${response.status} ${response.statusText}`;\n    } else {\n      errText = `API Call error ${response.status}`;\n    }\n  }\n  return errText;\n}\nexport async function apiGet(url, qryParams) {\n  const params = new URLSearchParams(qryParams);\n  const token = await authService.getAccessToken();\n  const response = await fetch(`${URL_BASE}/${url}?${params}`, {\n    headers: !token ? {} : {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const errText = checkResponse(response);\n  const body = await response.json();\n  if (!body) body = {\n    errText: \"No data from server\"\n  };\n  body.errText = body.errText || errText;\n  return body;\n}\nexport async function apiPost(url, qryParams, data) {\n  const params = new URLSearchParams(qryParams);\n  const token = await authService.getAccessToken();\n  let config = {\n    ...configPostJson,\n    headers: !token ? {} : {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  let response;\n  try {\n    response = await axios.post(`${URL_BASE}/${url}?${params}`, data, config);\n  } catch (error) {\n    console.log(error.message || error);\n    if (error.response) {\n      response = error.response;\n    } else {\n      return {\n        errText: error.message\n      };\n    }\n  }\n  const errText = checkResponse(response);\n  const body = response.data;\n  if (!body) body = {\n    errText: \"No data from server\"\n  };\n  body.errText = body.errText || errText;\n  return body;\n}","map":{"version":3,"names":["axios","authService","nextUid","getNextUid","URL_BASE","configPostJson","withCredentials","headers","Accept","checkResponse","response","errText","status","statusText","apiGet","url","qryParams","params","URLSearchParams","token","getAccessToken","fetch","body","json","apiPost","data","config","post","error","console","log","message"],"sources":["/Users/bhrozdamsaz/Documents/GitHub/ProjectLexicon/projectLexicon/ClientApp/src/components/Chat/api.js"],"sourcesContent":["import axios from \"axios\";\nimport authService from '../api-authorization/AuthorizeService'\n\nlet nextUid = 1;\nexport function getNextUid() {\n  return nextUid++;\n}\n\nconst URL_BASE = \"api\";\n\nconst configPostJson = {\n  withCredentials: true,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nfunction checkResponse(response) {\n  let errText = \"\";\n  if (!response) {\n    errText = `API Call status No Response`;\n  } else if (!response.status) {\n    errText = `API Call Missing Response status`;\n  } else if (response.status < 200 || response.status > 299) {\n    if (response.statusText) {\n      errText = `API Call error ${response.status} ${response.statusText}`;\n    } else {\n      errText = `API Call error ${response.status}`;\n    }\n  }\n  return errText;\n}\n\nexport async function apiGet(url, qryParams) {\n  const params = new URLSearchParams(qryParams);\n  const token = await authService.getAccessToken();\n  const response = await fetch(`${URL_BASE}/${url}?${params}`, {\n    headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\n  });\n  const errText = checkResponse(response)\n  const body = await response.json();\n  if (!body) body = { errText: \"No data from server\" }\n  body.errText = body.errText || errText;\n  return body;\n}\n\nexport async function apiPost(url, qryParams, data) {\n  const params = new URLSearchParams(qryParams);\n  const token = await authService.getAccessToken();\n  let config = {\n    ...configPostJson,\n    headers: !token\n      ? {}\n      : { 'Authorization': `Bearer ${token}` }\n  }\n  let response;\n  try {\n    response = await axios.post(`${URL_BASE}/${url}?${params}`, data, config);\n  } catch (error) {\n    console.log(error.message || error);\n    if (error.response) {\n      response = error.response;\n    } else {\n      return { errText: error.message }\n    }\n  }\n  const errText = checkResponse(response)\n  const body = response.data;\n  if (!body) body = { errText: \"No data from server\" }\n  body.errText = body.errText || errText;\n  return body\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}